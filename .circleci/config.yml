version: 2.1

aliases:
  - &restore_build_cache
    key: v1-dependencies-{{ checksum "build.sbt" }}-{{ checksum "project/Settings.scala" }}-{{ checksum "project/Dependencies.scala" }}

  - &save_build_cache
    key: v1-dependencies-{{ checksum "build.sbt" }}-{{ checksum "project/Settings.scala" }}-{{ checksum "project/Dependencies.scala" }}
    paths:
      - "~/.ivy2/cache"
      - "~/.cache/coursier"
      - "~/.sbt"
      - "~/.m2"

executors:
  executor-gdal:
    docker:
      - image: quay.io/azavea/openjdk-gdal:3.1-jdk8-slim
        environment:
          # https://circleci.com/docs/2.0/java-oom/
          _JAVA_OPTIONS: "-Xms64m -Xmx1536m"
      - image: nginx:1.18.0
        command: /bin/bash -c "cd /usr/share/nginx/html && curl -o all-ones.tif https://raw.githubusercontent.com/locationtech/geotrellis/v3.3.0/spark/src/test/resources/all-ones.tif && cd ~- && sed -i 's/listen       80;/listen       8081;/g' /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  executor-s3:
    docker:
      - image: quay.io/azavea/openjdk-gdal:3.1-jdk8-slim
        environment:
          _JAVA_OPTIONS: "-Xms64m -Xmx1536m"
      - image: minio/minio:RELEASE.2019-05-02T19-07-09Z
        environment:
          _JAVA_OPTIONS: "-Xms1m -Xmx512m"
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: password
        command: server --address :9091 /data

  executor-cassandra:
    docker:
      - image: quay.io/azavea/openjdk-gdal:3.1-jdk8-slim
        environment:
          _JAVA_OPTIONS: "-Xms64m -Xmx1536m"
      - image: cassandra:3.11.6
        environment:
          _JAVA_OPTIONS: "-Xms1m -Xmx512m"
          MAX_HEAP_SIZE: 512m
          HEAP_NEWSIZE: 1m
          CASSANDRA_LISTEN_ADDRESS: 127.0.0.1

  executor-hbase:
    docker:
      - image: quay.io/azavea/openjdk-gdal:3.1-jdk8-slim
        environment:
          _JAVA_OPTIONS: "-Xms64m -Xmx1536m"
      # https://github.com/pomadchin/hbase-docker
      - image: daunnc/hbase:2.2.4
        environment:
          _JAVA_OPTIONS: "-Xms1m -Xmx512m"
          HBASE_DOCKER_HOSTNAME: localhost

jobs:
  common:
    parameters:
      scala-version:
        type: string
      test-set:
        type: string
    executor: executor-gdal
    steps:
      - checkout
      - restore_cache: *restore_build_cache
      - run:
          name: Test
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            export RUN_SET=<< parameters.test-set >>
            .circleci/build-and-test.sh
          no_output_timeout: 30m
      - save_cache: *save_build_cache

  cassandra:
    parameters:
      scala-version:
        type: string
    executor: executor-cassandra
    steps:
      - checkout
      - restore_cache: *restore_build_cache
      - run:
          name: Test Cassandra
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            .circleci/build-and-test-cassandra.sh
      - save_cache: *save_build_cache

  s3:
    parameters:
      scala-version:
        type: string
    executor: executor-s3
    steps:
      - checkout
      - restore_cache: *restore_build_cache
      - run:
          name: Test S3
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            .circleci/build-and-test-s3.sh
      - save_cache: *save_build_cache

  hbase:
    parameters:
      scala-version:
        type: string
    executor: executor-hbase
    steps:
      - checkout
      - restore_cache: *restore_build_cache
      - run:
          name: Test HBase
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            .circleci/build-and-test-hbase.sh
      - save_cache: *save_build_cache

  accumulo:
    parameters:
      scala-version:
        type: string
    executor: executor-gdal
    steps:
      - checkout
      - restore_cache: *restore_build_cache
      - run:
          name: Test HBase
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            .circleci/build-and-test-accumulo.sh
      - save_cache: *save_build_cache

  geowave:
    parameters:
      scala-version:
        type: string
    executor: executor-cassandra
    steps:
      - checkout
      - restore_cache: *restore_build_cache
      - run:
          name: Test Cassandra
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            .circleci/build-and-test-geowave.sh
      - save_cache: *save_build_cache

  scaladocs:
    parameters:
      scala-version:
        type: string
    executor: executor-gdal
    steps:
      - checkout
      - restore_cache: *restore_build_cache
      - run:
          name: Scaladocs publish
          command: |
            ./sbt unidoc
            .circleci/scaladocs.sh || true
      - save_cache: *save_build_cache

  publish:
    parameters:
      scala-version:
        type: string
    executor: executor-gdal
    environment:
      _JAVA_OPTIONS: "-Xms128m -Xmx2g"
    steps:
      - checkout
      - restore_cache: *restore_build_cache
      - run:
          name: Artifacts publish
          command: |
            export SCALA_VERSION=<< parameters.scala-version >>
            ./sbt -Dsbt.supershell=false "++$SCALA_VERSION" publishLocal
      - save_cache: *save_build_cache

workflows:
  test-and-publish:
    jobs:
      - common:
          matrix:
            parameters:
              scala-version: ["2.12.14", "2.13.6"]
              test-set: ["1", "2"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/

      - cassandra:
          matrix:
            parameters:
              scala-version: ["2.12.14", "2.13.6"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/

      - s3:
          matrix:
            parameters:
              scala-version: ["2.12.14", "2.13.6"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/

      - hbase:
          matrix:
            parameters:
              scala-version: ["2.12.14", "2.13.6"]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/

      - accumulo:
          matrix:
            parameters:
              scala-version: [ "2.12.14", "2.13.6" ]
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v.*/

      # - geowave:
          # matrix:
            # parameters:
              # scala-version: [ "2.12.14", "2.13.6" ]
          # filters:
            # branches:
              # only: /.*/
            # tags:
              # only: /^v.*/

      - scaladocs:
          matrix:
            parameters:
              scala-version: ["2.12.14"]
          filters:
            branches:
              only: master

      - publish:
          requires:
            - common
            - cassandra
            - s3
            - hbase
          matrix:
            parameters:
              scala-version: ["2.12.14", "2.13.6"]
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
