pipeline:
  name: Geotrellis
  identifier: Geotrellis
  projectIdentifier: Geotrellis
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        repoName: geotrellis
        build: <+input>
  stages:
    - stage:
        name: Build and Test
        identifier: Build_and_Test
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - parallel:
                  - step:
                      type: Background
                      name: nginx
                      identifier: nginx
                      spec:
                        connectorRef: account.harnessImage
                        image: nginx:1.18.0
                        shell: Sh
                        command: /bin/bash -c "cd /usr/share/nginx/html && curl -o all-ones.tif https://raw.githubusercontent.com/locationtech/geotrellis/v3.3.0/spark/src/test/resources/all-ones.tif && cd ~- && sed -i 's/listen       80;/listen       8081;/g' /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
                  - step:
                      type: Background
                      name: minio
                      identifier: minio
                      spec:
                        connectorRef: account.harnessImage
                        image: minio/minio:RELEASE.2019-05-02T19-07-09Z
                        shell: Sh
                        command: server --address :9091 /data
                        envVariables:
                          MINIO_ACCESS_KEY: minio
                          MINIO_SECRET_KEY: password
                  - step:
                      type: Background
                      name: cassandra
                      identifier: cassandra
                      spec:
                        connectorRef: account.harnessImage
                        image: cassandra:4.0.4
                        shell: Sh
                        envVariables:
                          _JAVA_OPTIONS: "-Xms1m -Xmx512m"
                          MAX_HEAP_SIZE: 512m
                          HEAP_NEWSIZE: 1m
                          CASSANDRA_LISTEN_ADDRESS: 127.0.0.1
                  - step:
                      type: Background
                      name: hbase
                      identifier: hbase
                      spec:
                        connectorRef: account.harnessImage
                        image: daunnc/hbase:2.2.4
                        shell: Sh
                        envVariables:
                          _JAVA_OPTIONS: "-Xms1m -Xmx512m"
                          HBASE_DOCKER_HOSTNAME: localhost
              - step:
                  type: Run
                  name: unzip rasters
                  identifier: unzip_rasters
                  spec:
                    shell: Sh
                    command: cd raster/data; unzip geotiff-test-files.zip
              - step:
                  type: RunTests
                  name: Run Tests
                  identifier: Run_Tests
                  spec:
                    connectorRef: org.Quayio
                    image: quay.io/azavea/openjdk-gdal:3.1-jdk8-slim
                    language: Scala
                    buildTool: SBT
                    args: ++<+matrix.scala>
                    runOnlySelectedTests: true
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
                    imagePullPolicy: IfNotPresent
                    shell: Sh
        strategy:
          matrix:
            scala:
              - 2.12.17
              - 2.13.10
